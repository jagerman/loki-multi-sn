#!/bin/bash

set -e

if [ "$#" -ne 0 ]; then
    echo "Usage: oxen-multi-sn-upgrade"
    exit 1
fi

if [ "$UID" -ne 0 ]; then
    echo "This script must be run as root (e.g. via sudo)."
    exit 1
fi

oxend_upgrade=()
ss_upgrade=()
lokinet_upgrade=()
ss210_upgrade=()

shopt -s nullglob

echo "Finding lokid->oxend configs that need migration:"
for x in /etc/loki/node-[0-9][0-9].conf; do
    ox="${x/loki/oxen}"
    if [ -e "$ox" ]; then
        echo "Error: $ox already exists, aborting migration to avoid potentially overwriting things" >&2
        exit 1
    fi
    oxend_upgrade+=("$x")
    echo "    - $x"
done

echo "Finding storage server configs that need migration:"
for x in /etc/loki/storage-[0-9][0-9].conf; do
    ox="${x/loki/oxen}"
    if [ -e "$ox" ]; then
        echo "Error: $ox already exists, aborting migration to avoid potentially overwriting things" >&2
        exit 1
    fi
    ss_upgrade+=("$x")
    echo "    - $x"
done

for x in /etc/oxen/storage-[0-9][0-9].conf; do
    if ! grep -q oxend-rpc= $x; then
        ss210_upgrade+=("$x")
        echo "    - $x"
    fi
done

echo "Finding lokinet configs that need upgrading:"
for x in /etc/loki/lokinet-router-[0-9][0-9].ini; do
    if grep -q ^jsonrpc $x; then
        lokinet_upgrade+=("$x")
        echo "    - $x"
    fi
done

if [ "${#oxend_upgrade[@]}${#ss_upgrade[@]}${#lokinet_upgrade[@]}${#ss210_upgrade[@]}" == "0000" ]; then
    echo "Nothing to upgrade"
    exit 0
fi

restarts=()

if [ "${#oxend_upgrade[@]}" -gt 0 ]; then
    echo -e "\n"
    read -p "Press enter to move /etc/loki/node-*.conf files to /etc/oxen and switch the active services to oxen-node@XX.service, Ctrl-C to abort."
    echo

    stops=()
    starts=()
    for ox in "${oxend_upgrade[@]}"; do
        NN=${ox/*node-/}
        NN=${NN/.conf/}
        mv -v "${ox}" "${ox/loki/oxen}"
        if systemctl -q is-enabled loki-node@$NN; then
            stops+=("loki-node@$NN")
            starts+=("oxen-node@$NN")
        fi
    done
    if [ "${#stops[@]}" -gt 0 ]; then
        echo "Switching active services from loki-node@XX to oxen-node@XX"
        systemctl disable "${stops[@]}"
        systemctl enable "${starts[@]}"
        echo "Stopping ${stops[*]}"
        systemctl stop "${stops[@]}"
        echo "Starting ${starts[*]}"
        systemctl start "${starts[@]}"
    fi
fi

if [ "${#ss_upgrade[@]}" -gt 0 ]; then
    echo -e "\n"
    read -p "Press enter to move /etc/loki/storage-*.conf files to /etc/oxen and switch the active services to oxen-storage-server@XX.service, Ctrl-C to abort."
    echo

    stops=()
    starts=()
    for ox in "${ss_upgrade[@]}"; do
        NN=${ox/*storage-/}
        NN=${NN/.conf/}
        mv -v "${ox}" "${ox/loki/oxen}"
        if systemctl -q is-enabled loki-storage-server@$NN; then
            stops+=("loki-storage-server@$NN")
            starts+=("oxen-storage-server@$NN")
        fi
    done
    if [ "${#stops[@]}" -gt 0 ]; then
        echo "Switching active services from loki-storage-server@XX to oxen-storage-server@XX"
        systemctl disable "${stops[@]}"
        systemctl enable "${starts[@]}"
        echo "Stopping ${stops[*]}"
        systemctl stop "${stops[@]}"
        echo "Starting ${starts[*]}"
        systemctl start "${starts[@]}"
    fi

    echo -e "\e[33;1mNOTE: you need to run this script once more to fully migrate storage server!\e[1m"
fi

if [ "${#lokinet_upgrade[@]}" -gt 0 ]; then
    echo -e "\n"
    read -p "Press enter to change the old jsonrpc= option to rpc=... in the above lokinet configs, Ctrl-C to abort."

    for ln in "${lokinet_upgrade[@]}"; do
        num=${ln/*-/}
        num=${num/.ini/}
        perl -pi -e "s{^jsonrpc=.*}{rpc=ipc:///var/lib/oxen/node-$num/oxend.sock}" $ln
        echo "Updated RPC setting in $ln"
    done

    restarts+=("lokinet-routers.target")
fi

if [ "${#ss210_upgrade[@]}" -gt 0 ]; then
    echo -e "\n"
    echo -e "About to change the old lokid-rpc-port=PORT option to oxend-rpc=ipc:///var/lib/oxen/node-XX/oxend.sock"
    read -p "Press enter to continue, Ctrl-C to abort."

    for ss in "${ss210_upgrade[@]}"; do
        num=${ss/*storage-/}
        num=${num/.conf/}
        perl -pi -e "s{lokid-rpc-port=.*}{oxend-rpc=ipc:///var/lib/oxen/node-$num/oxend.sock}" $ss
        echo "Updated RPC setting in $ss"
    done

    restarts+=("oxen-storage-servers.target")
fi

echo -e "\nAll done."
if [ "${#restarts[*]}" -gt 0 ]; then
    echo -e "You probably want to run this now:\n\nsystemctl restart ${restarts[*]}\n"
fi
